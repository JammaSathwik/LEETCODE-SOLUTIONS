/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution 
{
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) 
    {
        ListNode* x = new ListNode();
        ListNode* y = x;
        while(l1!=NULL && l2!=NULL)
        {
            if(l1->val<=l2->val)
            {
                y->next=new ListNode(l1->val);
                l1=l1->next;
                y=y->next;
            }
            else
            {
                y->next=new ListNode(l2->val);
                l2=l2->next;
                y=y->next;
            }
        }
        while(l1!=NULL)
        {
            y->next=new ListNode(l1->val);
            l1=l1->next;
            y=y->next;
        }
        while(l2!=NULL)
        {
            y->next=new ListNode(l2->val);
            l2=l2->next;
            y=y->next;
        }
        return x->next;
    }
};
